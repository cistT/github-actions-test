name: Caller Job
on:
  workflow_dispatch:

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.find-dev-branches.outputs.branches }}
    steps:
      - name: Checkout branches
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set branches
        id: find-dev-branches
        run: |
          git fetch --all
          BRANCHES=$( git branch -r | grep -v HEAD | grep "origin/dev/" | sed "s/origin\///" | sed "s/ //g")
          echo $BRANCHES
          branch_array=$(printf "%s" "${BRANCHES[@]}" | jq -R . | jq -s .)
          echo $branch_array
          branches_json=$(echo {"branch":"${branch_array}"} | tr '\n' ' ')
          echo $branches_json
          echo "branches=$branches_json" >> "$GITHUB_OUTPUT"
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.set-matrix.outputs.branches) }}
    steps:
      - name: print branch
        run: |
          echo ${{matrix.branch}}

# | sed -e "s/[\n\r]\+//g"'
# steps:
#   name: 同時実行
#   strategy:
#     fail-fast: false
#     max-parallel: 2
#     matrix:
#       node:
#         - test1
#         - test2
#         - test3
#         - test4
#         - test5
#         - test6
#         - test7
#   uses: ./.github/workflows/callee.yml
#   with:
#     name: ${{ matrix.node }}

# runs-on:
#   with: sanro
# with:
#   name: sanro

# IFS=","
#         BRANCHES=$( git branch -r | grep "origin/dev/" | sed "s/origin\///" | tr)
#         read -r -a BRANCH_ARRAY <<< "$BRANCHES"
#         for element in "$BRANCH_ARRAY[@]"; do
#           echo $element
#         done
#         echo "branches=$BRANCHES" >> "$GITHUB_OUTPUT"

#  strategy:
#     fail-fast: false
#     matrix:
#       branch: ${{ fromJson(needs.set-matrix.outputs.branches) }}
